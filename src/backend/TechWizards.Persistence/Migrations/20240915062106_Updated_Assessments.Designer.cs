// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TechWizards.Persistence.DataContexts;

#nullable disable

namespace TechWizards.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240915062106_Updated_Assessments")]
    partial class Updated_Assessments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TechWizards.Domain.Models.Entities.QuizAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CorrectOptionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("QuizAssessmentId")
                        .HasColumnType("uuid");

                    b.Property<byte>("Result")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("SubmittedOptionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CorrectOptionId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuizAssessmentId");

                    b.HasIndex("SubmittedOptionId")
                        .IsUnique();

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("TechWizards.Domain.Models.Entities.QuizAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("Level")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<long>("Score")
                        .HasColumnType("bigint");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uuid");

                    b.Property<byte>("State")
                        .HasColumnType("smallint");

                    b.Property<byte>("Status")
                        .HasColumnType("smallint");

                    b.Property<List<string>>("Topics")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("Assessments", (string)null);

                    b.HasDiscriminator<string>("Type").HasValue("QuizAssessment");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TechWizards.Domain.Models.Entities.QuizAssessmentSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ParticipantIpAddress")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte>("State")
                        .HasColumnType("smallint");

                    b.Property<string>("Step")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.ToTable("AssessmentSessions");
                });

            modelBuilder.Entity("TechWizards.Domain.Models.Entities.QuizOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("boolean");

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("TechWizards.Domain.Models.Entities.QuizQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AssessmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AssessmentId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("TechWizards.Domain.Models.Entities.GrammarAssessment", b =>
                {
                    b.HasBaseType("TechWizards.Domain.Models.Entities.QuizAssessment");

                    b.HasDiscriminator().HasValue("Grammar");
                });

            modelBuilder.Entity("TechWizards.Domain.Models.Entities.ListeningAssessment", b =>
                {
                    b.HasBaseType("TechWizards.Domain.Models.Entities.QuizAssessment");

                    b.Property<string>("AudioContent")
                        .IsRequired()
                        .HasMaxLength(32768)
                        .HasColumnType("character varying(32768)");

                    b.Property<string>("AudioFileUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Listening");
                });

            modelBuilder.Entity("TechWizards.Domain.Models.Entities.QuizAnswer", b =>
                {
                    b.HasOne("TechWizards.Domain.Models.Entities.QuizOption", "CorrectOption")
                        .WithMany()
                        .HasForeignKey("CorrectOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechWizards.Domain.Models.Entities.QuizQuestion", "QuizQuestion")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechWizards.Domain.Models.Entities.QuizAssessment", null)
                        .WithMany("ParticipantAnswers")
                        .HasForeignKey("QuizAssessmentId");

                    b.HasOne("TechWizards.Domain.Models.Entities.QuizOption", "SubmittedOption")
                        .WithOne()
                        .HasForeignKey("TechWizards.Domain.Models.Entities.QuizAnswer", "SubmittedOptionId");

                    b.Navigation("CorrectOption");

                    b.Navigation("QuizQuestion");

                    b.Navigation("SubmittedOption");
                });

            modelBuilder.Entity("TechWizards.Domain.Models.Entities.QuizAssessment", b =>
                {
                    b.HasOne("TechWizards.Domain.Models.Entities.QuizAssessmentSession", "Session")
                        .WithMany("Assessments")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("TechWizards.Domain.Models.Entities.QuizOption", b =>
                {
                    b.HasOne("TechWizards.Domain.Models.Entities.QuizQuestion", "QuizQuestion")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuizQuestion");
                });

            modelBuilder.Entity("TechWizards.Domain.Models.Entities.QuizQuestion", b =>
                {
                    b.HasOne("TechWizards.Domain.Models.Entities.QuizAssessment", "QuizAssessment")
                        .WithMany("Questions")
                        .HasForeignKey("AssessmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuizAssessment");
                });

            modelBuilder.Entity("TechWizards.Domain.Models.Entities.QuizAssessment", b =>
                {
                    b.Navigation("ParticipantAnswers");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("TechWizards.Domain.Models.Entities.QuizAssessmentSession", b =>
                {
                    b.Navigation("Assessments");
                });

            modelBuilder.Entity("TechWizards.Domain.Models.Entities.QuizQuestion", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
